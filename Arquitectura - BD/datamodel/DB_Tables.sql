USE master
GO

IF NOT EXISTS (select name from dbo.sysdatabases where name = N'SGF')
	raiserror('Não foi detectada a Base de Dados. Verifique por favor.', 20, -1) with log
GO

USE SGF
GO

IF EXISTS (select * from dbo.sysobjects where id = object_id(N'[SGFADM].[SGF_P_Create_Tables]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [sgfadm].[SGF_P_Create_Tables]
GO

IF EXISTS (select * from dbo.sysobjects where id = object_id(N'[SGFADM].[SGF_P_Insert_Data]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [sgfadm].[SGF_P_Insert_Data]
GO

CREATE PROCEDURE [sgfadm].[SGF_P_Insert_Data]
AS
BEGIN
	BEGIN TRAN
		SET DATEFORMAT ymd
		
		-- DELETE OBJECTS
		-- SGF_T_ACCOUNT_USER
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_ACCOUNT_USER') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_T_ACCOUNT_USER

		-- SGF_T_ACCOUNT_MOVEMENT
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_ACCOUNT_MOVEMENT') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_T_ACCOUNT_MOVEMENT
	
		-- SGF_T_ACCOUNT	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_ACCOUNT') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_T_ACCOUNT
		
		-- SGF_R_SUB_CATEGORY	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_SUB_CATEGORY') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_R_SUB_CATEGORY
				
		-- SGF_R_CATEGORY	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_CATEGORY') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_R_CATEGORY

		-- SGF_R_MOVEMENT_TYPE	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_MOVEMENT_TYPE') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_R_MOVEMENT_TYPE

		-- SGF_T_USER
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_USER') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_T_USER

		-- SGF_R_ROLE
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_ROLE') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_R_ROLE
				
		-- SGF_R_COUNTRY
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_COUNTRY') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_R_COUNTRY

		-- SGF_R_LANGUAGE	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_LANGUAGE') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DELETE sgfadm.SGF_R_LANGUAGE	
		
		-- INSERT DATA
		-- SGF_R_LANGUAGE
		INSERT INTO sgfadm.SGF_R_LANGUAGE(LANGUAGE) VALUES ('Inglês')
		INSERT INTO sgfadm.SGF_R_LANGUAGE(LANGUAGE) VALUES ('Português')
		
		-- SGF_R_COUNTRY
		INSERT INTO sgfadm.SGF_R_COUNTRY(COUNTRY_NAME,ACRONYM) VALUES ('Portugal','PT')
		INSERT INTO sgfadm.SGF_R_COUNTRY(COUNTRY_NAME,ACRONYM) VALUES ('Inglaterra','GB')
		
		-- SGF_R_ROLE
		INSERT INTO sgfadm.SGF_R_ROLE(ROLE_NAME,DESCRIPTION) VALUES ('ADMIN','Administrador da Conta')
		INSERT INTO sgfadm.SGF_R_ROLE(ROLE_NAME,DESCRIPTION) VALUES ('READONLY','Permissão de Leitura')
		
		-- SGF_T_USER
		INSERT INTO sgfadm.SGF_T_USER(NAME,PASSWORD,EMAIL,NATIONALITY,LANGUAGE_PREF,CREATED_DATE) VALUES('wilson','wilson','wilson@gmail.com',2,1,GETDATE())
		INSERT INTO sgfadm.SGF_T_USER(NAME,PASSWORD,EMAIL,NATIONALITY,LANGUAGE_PREF,CREATED_DATE) VALUES('vlopes','vlopes','vlopes@gmail.com',2,1,GETDATE())
		INSERT INTO sgfadm.SGF_T_USER(NAME,PASSWORD,EMAIL,NATIONALITY,LANGUAGE_PREF,CREATED_DATE) VALUES('isac','isac','isac@gmail.com',1,1,GETDATE())
		
		-- SGF_R_MOVEMENT_TYPE
		INSERT INTO SGFADM.SGF_R_MOVEMENT_TYPE (MOV_TYPE_ID,DESCRIPTION) VALUES (1, 'INCOME');
		INSERT INTO SGFADM.SGF_R_MOVEMENT_TYPE (MOV_TYPE_ID,DESCRIPTION) VALUES (2, 'EXPENSES');
		INSERT INTO SGFADM.SGF_R_MOVEMENT_TYPE (MOV_TYPE_ID,DESCRIPTION) VALUES (3, 'INCOME TAXES WITHHELD');

		
		-- SGF_R_CATEGORY
		
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (1,1,'Wages and Bonuses');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (2,1,'Interest Income');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (3,1,'Investment Income');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (4,1,'Miscellaneous Income');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (5,2,'HOME');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (6,2,'UTILITIES');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (7,2,'FOOD');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (8,2,'FAMILY OBLIGATIONS');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (9,2,'HEALTH AND MEDICAL');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (10,2,'TRANSPORTATION');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (11,2,'DEBT PAYMENTS');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (12,2,'ENTERTAINMENT/RECREATION');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (13,2,'PETS');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (14,2,'CLOTHING');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (15,2,'INVESTMENTS AND SAVINGS');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (16,2,'MISCELLANEOUS');
		INSERT INTO SGFADM.SGF_R_CATEGORY (CAT_ID,MOV_TYPE_ID,DESCRIPTION) VALUES (17,2,'EDUCATION');

		
		-- SGF_R_SUB_CATEGORY
		
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (1,5,'Mortgage or Rent');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (2,5,'Homeowners/Renters Insurance');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (3,5,'Property Taxes');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (4,5,'Home Repairs/Maintenance/HOA Dues');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (5,5,'Home Improvements');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (6,6,'Electricity');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (7,6,'Water and Sewer');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (8,6,'Natural Gas or Oil');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (9,6,'Telephone (Land Line, Cell)');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (10,7,'Groceries');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (11,7,'Eating Out, Lunches, Snacks');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (12,8,'Child Support');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (13,8,'Alimony');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (14,8,'Day Care, Babysitting');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (15,9,'Insurance (medical,dental,vision)');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (16,9,'Unreimbursed Medical Expenses, Copays');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (17,9,'Fitness (Yoga,Massage,Gym)');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (18,10,'Car Payments');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (19,10,'Gasoline/Oil');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (20,10,'Auto Repairs/Maintenance/Fees');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (21,10,'Auto Insurance');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (22,10,'Other Transportation (tolls, bus, subway, taxis)');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (23,11,'Credit Cards');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (24,11,'Student Loans');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (25,11,'Other Loans');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (26,12,'Cable TV/Videos/Movies');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (27,12,'Computer Expense');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (28,12,'Hobbies');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (29,12,'Subscriptions and Dues');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (30,12,'Vacations');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (31,13,'Food');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (32,13,'Grooming, Boarding, Vet');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (33,15,'Stocks/Bonds/Mutual Funds');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (34,15,'College Fund');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (35,15,'Savings');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (36,15,'Emergency Fund');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (37,16,'Toiletries, Household Products');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (38,16,'Gifts/Donations');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (39,16,'Grooming (Hair, Make-up, Other)');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (40,16,'Miscellaneous Expense');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (41,17,'Fees');
		INSERT INTO SGFADM.SGF_R_SUB_CATEGORY (SUB_CAT_ID,CAT_ID,DESCRIPTION) VALUES (42,17,'Materials');

		
		-- SGF_T_ACCOUNT
		INSERT INTO sgfadm.SGF_T_ACCOUNT(ACCOUNT_NUMBER,ACCOUNT_NAME,BANK_NAME,OTHER_INFO,BALANCE) VALUES ('1000000001','Conta Pessoal Wilson','CGD',NULL,'1000')
		INSERT INTO sgfadm.SGF_T_ACCOUNT(ACCOUNT_NUMBER,ACCOUNT_NAME,BANK_NAME,OTHER_INFO,BALANCE) VALUES ('1000000002','Conta Pessoal Vasco','BES',NULL,'1000')
		INSERT INTO sgfadm.SGF_T_ACCOUNT(ACCOUNT_NUMBER,ACCOUNT_NAME,BANK_NAME,OTHER_INFO,BALANCE) VALUES ('1000000003','Conta Pessoal Isac','Montepio',NULL,'1000')
	
		--SGF_T_ACCOUNT_USER
		INSERT INTO sgfadm.SGF_T_ACCOUNT_USER(ACCOUNT_ID,USER_ID,ROLE_ID) VALUES (1,1,1)
		INSERT INTO sgfadm.SGF_T_ACCOUNT_USER(ACCOUNT_ID,USER_ID,ROLE_ID) VALUES (2,2,1)
		INSERT INTO sgfadm.SGF_T_ACCOUNT_USER(ACCOUNT_ID,USER_ID,ROLE_ID) VALUES (3,3,1)

		-- SGF_T_ACCOUNT_MOVEMENT
		INSERT INTO sgfadm.SGF_T_ACCOUNT_MOVEMENT(ACCOUNT_ID,MOV_TYPE_ID,CAT_ID,SUB_CAT_ID,AMOUNT,DESCRIPTION,CREATED_BY,CREATED_DATE)
		VALUES (1,1,1,1,1000,'Ordenado de Abril','wilson', GETDATE())
		INSERT INTO sgfadm.SGF_T_ACCOUNT_MOVEMENT(ACCOUNT_ID,MOV_TYPE_ID,CAT_ID,SUB_CAT_ID,AMOUNT,DESCRIPTION,CREATED_BY,CREATED_DATE)
		VALUES (2,1,1,1,1000,'Ordenado de Abril','vlopes', GETDATE())
		INSERT INTO sgfadm.SGF_T_ACCOUNT_MOVEMENT(ACCOUNT_ID,MOV_TYPE_ID,CAT_ID,SUB_CAT_ID,AMOUNT,DESCRIPTION,CREATED_BY,CREATED_DATE)
		VALUES (3,1,1,1,1000,'Ordenado de Abril','isac', GETDATE())

	COMMIT
END
GO

CREATE PROCEDURE [sgfadm].[SGF_P_Create_Tables]
	@withData CHAR(1) = 'N'
AS
BEGIN
	BEGIN TRAN
		-- DROP OBJECTS
		-- SGF_T_ACCOUNT_USER
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_ACCOUNT_USER') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_T_ACCOUNT_USER

		-- SGF_T_ACCOUNT_MOVEMENT
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_ACCOUNT_MOVEMENT') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_T_ACCOUNT_MOVEMENT
	
		-- SGF_T_ACCOUNT	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_ACCOUNT') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_T_ACCOUNT
		
		-- SGF_R_SUB_CATEGORY	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_SUB_CATEGORY') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_R_SUB_CATEGORY
				
		-- SGF_R_CATEGORY	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_CATEGORY') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_R_CATEGORY

		-- SGF_R_MOVEMENT_TYPE	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_MOVEMENT_TYPE') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_R_MOVEMENT_TYPE

		-- SGF_T_USER
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_T_USER') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_T_USER

		-- SGF_R_ROLE
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_ROLE') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_R_ROLE
				
		-- SGF_R_COUNTRY
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_COUNTRY') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_R_COUNTRY

		-- SGF_R_LANGUAGE	
		IF EXISTS (select * from dbo.sysobjects where id = object_id(N'sgfadm.SGF_R_LANGUAGE') 
			and OBJECTPROPERTY(id, N'IsUserTable') = 1)
				DROP TABLE sgfadm.SGF_R_LANGUAGE				
		
		-- CREATE OBJECTS
		-- SGF_R_LANGUAGE
		CREATE TABLE sgfadm.SGF_R_LANGUAGE(
			LANGUAGE_ID		INT	IDENTITY (1,1) NOT NULL
			,LANGUAGE		VARCHAR(50) NOT NULL
			,CONSTRAINT PK_SGF_R_LANGUAGE PRIMARY KEY CLUSTERED (LANGUAGE_ID ASC)
		)
		
		-- SGF_R_COUNTRY
		CREATE TABLE sgfadm.SGF_R_COUNTRY(
			COUNTRY_ID		INT	IDENTITY (1,1) NOT NULL
			,COUNTRY_NAME	VARCHAR(50) NOT NULL
			,ACRONYM		VARCHAR(2) NOT NULL						--SIGLA 2 CHARS P.E. PT
			,CONSTRAINT PK_SGF_R_COUNTRY PRIMARY KEY CLUSTERED (COUNTRY_ID ASC)
		)
		
		-- SGF_R_ROLE
		CREATE TABLE sgfadm.SGF_R_ROLE(
			ROLE_ID			INT	IDENTITY (1,1) NOT NULL
			,ROLE_NAME		VARCHAR(50) NOT NULL 
			,DESCRIPTION	VARCHAR(200) NULL
			,CONSTRAINT PK_SGF_R_ROLE PRIMARY KEY CLUSTERED (ROLE_ID ASC)
		)
		
		-- SGF_T_USER
		CREATE TABLE sgfadm.SGF_T_USER(
			USER_ID			INT	IDENTITY (1,1) NOT NULL
			,NAME			VARCHAR(200) NOT NULL 
			,PASSWORD		VARCHAR(50) NOT NULL
			,EMAIL			VARCHAR(100) NOT NULL 
			,NATIONALITY	INT	NULL
			,LANGUAGE_PREF	INT NULL
			,CREATED_DATE	DATETIME NOT NULL 
			,MODIFIED_DATE	DATETIME NULL 
			,CONSTRAINT PK_SGF_T_USER PRIMARY KEY CLUSTERED(USER_ID ASC)
			,CONSTRAINT FK_SGF_T_USER_SGF_R_COUNTRY FOREIGN KEY (NATIONALITY)
						REFERENCES sgfadm.SGF_R_COUNTRY(COUNTRY_ID)
			,CONSTRAINT FK_SGF_T_USER_SGF_R_LANGUAGE FOREIGN KEY (LANGUAGE_PREF)
						REFERENCES sgfadm.SGF_R_LANGUAGE(LANGUAGE_ID)
		)
		
		-- SGF_R_MOVEMENT_TYPE
		CREATE TABLE sgfadm.SGF_R_MOVEMENT_TYPE(
			 MOV_TYPE_ID		INT	  NOT NULL
			--MOV_TYPE_ID		INT	IDENTITY (1,1) NOT NULL
			,DESCRIPTION	VARCHAR(200) NOT NULL 
			,CONSTRAINT PK_SGF_R_MOVEMENT_TYPE PRIMARY KEY CLUSTERED (MOV_TYPE_ID ASC)
		)
		
		-- SGF_R_CATEGORY
		CREATE TABLE sgfadm.SGF_R_CATEGORY(
			CAT_ID			INT	  NOT NULL
			--CAT_ID			INT	IDENTITY (1,1) NOT NULL
			,DESCRIPTION	VARCHAR(100) NOT NULL 
			,MOV_TYPE_ID	INT	NOT NULL
			,CONSTRAINT PK_SGF_R_CATEGORY PRIMARY KEY CLUSTERED (CAT_ID ASC)
			,CONSTRAINT FK_SGF_R_CATEGORY_SGF_R_MOVEMENT_TYPE FOREIGN KEY (MOV_TYPE_ID)
						REFERENCES sgfadm.SGF_R_MOVEMENT_TYPE(MOV_TYPE_ID)
		)

		-- SGF_R_SUB_CATEGORY
		CREATE TABLE sgfadm.SGF_R_SUB_CATEGORY(
			SUB_CAT_ID		INT	  NOT NULL
			--SUB_CAT_ID		INT	IDENTITY (1,1) NOT NULL
			,DESCRIPTION	VARCHAR(100) NOT NULL 
			,CAT_ID			INT NOT NULL
			,CONSTRAINT PK_SGF_R_SUB_CATEGORY PRIMARY KEY CLUSTERED (SUB_CAT_ID ASC)
			,CONSTRAINT FK_SGF_R_SUB_CATEGORY_SGF_R_CATEGORY FOREIGN KEY (CAT_ID)
						REFERENCES sgfadm.SGF_R_CATEGORY(CAT_ID)
		)

		-- SGF_T_ACCOUNT
		CREATE TABLE sgfadm.SGF_T_ACCOUNT(
			ACCOUNT_ID		INT	IDENTITY (1,1) NOT NULL
			,ACCOUNT_NUMBER	VARCHAR(50) NOT NULL 
			,ACCOUNT_NAME	VARCHAR(50) NULL 
			,BANK_NAME		VARCHAR(50) NULL 
			,OTHER_INFO		VARCHAR(100) NULL 
			,BALANCE		decimal(10,2) NOT NULL
			,CONSTRAINT PK_SGF_T_ACCOUNT PRIMARY KEY CLUSTERED (ACCOUNT_ID ASC)
		)
		
		-- SGF_T_ACCOUNT_MOVEMENT
		CREATE TABLE sgfadm.SGF_T_ACCOUNT_MOVEMENT(
			MOV_ID			INT	IDENTITY (1,1) NOT NULL
			,ACCOUNT_ID		INT	NOT NULL
			,MOV_TYPE_ID	INT	NOT NULL
			,CAT_ID			INT	NOT NULL
			--,SUB_CAT_ID		INT	NOT NULL
			,SUB_CAT_ID		INT	
			,AMOUNT			DECIMAL	(10,2) NOT NULL
			,DESCRIPTION	VARCHAR(200) NOT NULL
			,CREATED_BY		VARCHAR(100) NOT NULL
			,CREATED_DATE	DATETIME NOT NULL
			,MODIFIED_DATE	DATETIME NULL
			,MODIFIED_BY	VARCHAR(100) NULL
			,CONSTRAINT PK_SGF_T_ACCOUNT_MOVEMENT PRIMARY KEY CLUSTERED (MOV_ID ASC)
			,CONSTRAINT FK_SGF_T_ACCOUNT_MOVEMENT_SGF_T_ACCOUNT FOREIGN KEY (ACCOUNT_ID)
						REFERENCES sgfadm.SGF_T_ACCOUNT(ACCOUNT_ID)
			,CONSTRAINT FK_SGF_T_ACCOUNT_MOVEMENT_SGF_R_MOVEMENT_TYPE FOREIGN KEY (MOV_TYPE_ID)
						REFERENCES sgfadm.SGF_R_MOVEMENT_TYPE(MOV_TYPE_ID)
			,CONSTRAINT FK_SGF_T_ACCOUNT_MOVEMENT_SGF_R_CATEGORY FOREIGN KEY (CAT_ID)
						REFERENCES sgfadm.SGF_R_CATEGORY(CAT_ID)
			,CONSTRAINT FK_SGF_T_ACCOUNT_MOVEMENT_SGF_R_SUB_CATEGORY FOREIGN KEY (SUB_CAT_ID)
						REFERENCES sgfadm.SGF_R_SUB_CATEGORY(SUB_CAT_ID)
		)
		
		--SGF_T_ACCOUNT_USER
		CREATE TABLE sgfadm.SGF_T_ACCOUNT_USER(
			ACCOUNT_ID	INT NOT NULL
			,USER_ID	INT NOT NULL
			,ROLE_ID	INT NOT NULL
			,CONSTRAINT PK_SGF_T_ACCOUNT_USER PRIMARY KEY CLUSTERED (ACCOUNT_ID,USER_ID)
			,CONSTRAINT FK_SGF_T_ACCOUNT_USER_SGF_T_ACCOUNT FOREIGN KEY (ACCOUNT_ID)
						REFERENCES sgfadm.SGF_T_ACCOUNT(ACCOUNT_ID)
			,CONSTRAINT FK_SGF_T_ACCOUNT_USER_SGF_T_USER FOREIGN KEY (USER_ID)
						REFERENCES sgfadm.SGF_T_USER(USER_ID)
			,CONSTRAINT FK_SGF_T_ACCOUNT_USER_SGF_R_ROLE FOREIGN KEY (ROLE_ID)
						REFERENCES sgfadm.SGF_R_ROLE(ROLE_ID)
		)

		IF @withData = 'S'
			EXEC SGFADM.SGF_P_Insert_Data

	COMMIT
END
GO
use SGF
EXEC SGFADM.SGF_P_Create_TABLES 'S'
GO

--select * from dbo.SGF_T_ACCOUNT_MOVEMENT


		